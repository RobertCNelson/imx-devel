From c9f9b859c11ac45bedf7207acb3bce2520cc6bc1 Mon Sep 17 00:00:00 2001
From: Lily Zhang <r58066@freescale.com>
Date: Wed, 13 Apr 2011 14:28:46 +0800
Subject: [PATCH 905/998] ENGR00141486-1 mx5x: remove build warning message

remove building warning message in mx5x files.

Signed-off-by: Lily Zhang <r58066@freescale.com>
---
 arch/arm/mach-mx5/clock.c                 |   41 +------------
 arch/arm/mach-mx5/clock_mx50.c            |   40 -------------
 arch/arm/mach-mx5/mx50_rdp_pmic_mc13892.c |    8 ---
 arch/arm/mach-mx5/mx51_babbage.c          |   91 +----------------------------
 arch/arm/mach-mx5/mx53_evk.c              |    4 +-
 arch/arm/mach-mx5/pm.c                    |    2 +-
 arch/arm/mach-mx5/system.c                |    2 -
 arch/arm/plat-mxc/clock.c                 |    5 +-
 arch/arm/plat-mxc/pwm.c                   |    5 +-
 arch/arm/plat-mxc/zq_calib.c              |   44 --------------
 10 files changed, 12 insertions(+), 230 deletions(-)

diff --git a/arch/arm/mach-mx5/clock.c b/arch/arm/mach-mx5/clock.c
index 3069d05..72f6ff0 100644
--- a/arch/arm/mach-mx5/clock.c
+++ b/arch/arm/mach-mx5/clock.c
@@ -304,17 +304,6 @@ static struct clk fpm_clk = {
 	.flags = RATE_PROPAGATES,
 };
 
-static unsigned long _fpm_div2_get_rate(struct clk *clk)
-{
-	return  clk_get_rate(clk->parent) / 2;
-}
-
-static struct clk fpm_div2_clk = {
-	.parent = &fpm_clk,
-	.get_rate = _fpm_div2_get_rate,
-	.flags = RATE_PROPAGATES,
-};
-
 static unsigned long _clk_pll_get_rate(struct clk *clk)
 {
 	long mfi, mfn, mfd, pdf, ref_clk, mfn_abs;
@@ -2343,16 +2332,6 @@ static struct clk hsi2c_serial_clk = {
 	.disable = _clk_disable,
 };
 
-static struct clk hsi2c_clk = {
-	.id = 0,
-	.parent = &ipg_clk,
-	.enable_reg = MXC_CCM_CCGR1,
-	.enable_shift = MXC_CCM_CCGRx_CG12_OFFSET,
-	.enable = _clk_enable,
-	.disable = _clk_disable,
-	.flags = AHB_HIGH_SET_POINT | CPU_FREQ_TRIG_UPDATE,
-};
-
 static unsigned long _clk_cspi_get_rate(struct clk *clk)
 {
 	u32 reg, prediv, podf;
@@ -2720,7 +2699,7 @@ static struct clk ssi3_clk[] = {
 	 .id = 2,
 	 .parent = &aips_tz2_clk,
 #ifdef CONFIG_SND_MXC_SOC_IRAM
-	 .secondary = &emi_intr_clk,
+	 .secondary = &emi_intr_clk[0],
 #else
 	 .secondary = &emi_fast_clk,
 #endif
@@ -3959,22 +3938,6 @@ static struct clk lpsr_clk = {
 	.set_parent = _clk_lpsr_set_parent,
 };
 
-static unsigned long _clk_pgc_get_rate(struct clk *clk)
-{
-	u32 reg, div;
-
-	reg = __raw_readl(MXC_CCM_CSCDR1);
-	div = (reg & MXC_CCM_CSCDR1_PGC_CLK_PODF_MASK) >>
-	    MXC_CCM_CSCDR1_PGC_CLK_PODF_OFFSET;
-	div = 1 >> div;
-	return clk_get_rate(clk->parent) / div;
-}
-
-static struct clk pgc_clk = {
-	.parent = &ipg_clk,
-	.get_rate = _clk_pgc_get_rate,
-};
-
 static unsigned long _clk_usb_get_rate(struct clk *clk)
 {
 	return 60000000;
@@ -4401,7 +4364,7 @@ static struct clk_lookup lookups[] = {
 	_REGISTER_CLOCK("mxc_vpu.0", NULL, vpu_clk[0]),
 	_REGISTER_CLOCK(NULL, "lpsr_clk", lpsr_clk),
 	_REGISTER_CLOCK("mxc_rtc.0", NULL, rtc_clk),
-	_REGISTER_CLOCK("pata_fsl", NULL, ata_clk),
+	_REGISTER_CLOCK("pata_fsl", NULL, ata_clk[0]),
 	_REGISTER_CLOCK("mxc_w1.0", NULL, owire_clk),
 	_REGISTER_CLOCK(NULL, "sahara_clk", sahara_clk[0]),
 	_REGISTER_CLOCK(NULL, "gpu3d_clk", gpu3d_clk[0]),
diff --git a/arch/arm/mach-mx5/clock_mx50.c b/arch/arm/mach-mx5/clock_mx50.c
index 6bcfbeb..35f88a2 100644
--- a/arch/arm/mach-mx5/clock_mx50.c
+++ b/arch/arm/mach-mx5/clock_mx50.c
@@ -1078,16 +1078,6 @@ static struct clk ahb_max_clk = {
 	.disable = _clk_max_disable,
 };
 
-static struct clk ahbmux1_clk = {
-	.id = 0,
-	.parent = &ahb_clk,
-	.secondary = &ahb_max_clk,
-	.enable = _clk_enable,
-	.enable_reg = MXC_CCM_CCGR0,
-	.enable_shift = MXC_CCM_CCGRx_CG8_OFFSET,
-	.disable = _clk_disable_inwait,
-};
-
 static unsigned long _clk_ipg_get_rate(struct clk *clk)
 {
 	u32 reg, div;
@@ -1152,20 +1142,6 @@ static struct clk ipg_perclk = {
 	.flags = RATE_PROPAGATES,
 };
 
-static struct clk ipmux1_clk = {
-	.enable_reg = MXC_CCM_CCGR5,
-	.enable_shift = MXC_CCM_CCGRx_CG6_OFFSET,
-	.enable = _clk_enable,
-	.disable = _clk_disable,
-};
-
-static struct clk ipmux2_clk = {
-	.enable_reg = MXC_CCM_CCGR6,
-	.enable_shift = MXC_CCM_CCGRx_CG0_OFFSET,
-	.enable = _clk_enable,
-	.disable = _clk_disable,
-};
-
 static int _clk_sys_clk_enable(struct clk *clk)
 {
 	u32 reg;
@@ -2355,22 +2331,6 @@ static struct clk ddr_clk = {
 	.disable = _clk_ddr_disable,
 };
 
-static unsigned long _clk_pgc_get_rate(struct clk *clk)
-{
-	u32 reg, div;
-
-	reg = __raw_readl(MXC_CCM_CSCDR1);
-	div = (reg & MXC_CCM_CSCDR1_PGC_CLK_PODF_MASK) >>
-	    MXC_CCM_CSCDR1_PGC_CLK_PODF_OFFSET;
-	div = 1 >> div;
-	return clk_get_rate(clk->parent) / div;
-}
-
-static struct clk pgc_clk = {
-	.parent = &ipg_clk,
-	.get_rate = _clk_pgc_get_rate,
-};
-
 static unsigned long _clk_usb_get_rate(struct clk *clk)
 {
 	return 60000000;
diff --git a/arch/arm/mach-mx5/mx50_rdp_pmic_mc13892.c b/arch/arm/mach-mx5/mx50_rdp_pmic_mc13892.c
index 5502d40..e7b0af1 100644
--- a/arch/arm/mach-mx5/mx50_rdp_pmic_mc13892.c
+++ b/arch/arm/mach-mx5/mx50_rdp_pmic_mc13892.c
@@ -104,14 +104,6 @@ static struct regulator_consumer_supply sw4_consumers[] = {
 	},
 };
 
-static struct regulator_consumer_supply vgen1_consumers[] = {
-	{
-		/* sgtl5000 */
-		.supply = "VDDIO",
-		.dev_name = "1-000a",
-	},
-};
-
 struct mc13892;
 
 static struct regulator_init_data sw1_init = {
diff --git a/arch/arm/mach-mx5/mx51_babbage.c b/arch/arm/mach-mx5/mx51_babbage.c
index 5c0f934..bf9982d 100644
--- a/arch/arm/mach-mx5/mx51_babbage.c
+++ b/arch/arm/mach-mx5/mx51_babbage.c
@@ -611,93 +611,6 @@ static int __init mxc_init_fb(void)
 }
 device_initcall(mxc_init_fb);
 
-static int handle_edid(int *pixclk)
-{
-#if 0
-	int err = 0;
-	int dvi = 0;
-	int fb0 = 0;
-	int fb1 = 1;
-	struct fb_var_screeninfo screeninfo;
-	struct i2c_adapter *adp;
-
-	memset(&screeninfo, 0, sizeof(screeninfo));
-
-	adp = i2c_get_adapter(1);
-
-	if (cpu_is_mx51_rev(CHIP_REV_3_0) > 0) {
-		gpio_set_value(IOMUX_TO_GPIO(MX51_PIN_CSI2_HSYNC), 1);
-		msleep(1);
-	}
-	err = read_edid(adp, &screeninfo, &dvi);
-	if (cpu_is_mx51_rev(CHIP_REV_3_0) > 0)
-		gpio_set_value(IOMUX_TO_GPIO(MX51_PIN_CSI2_HSYNC), 0);
-
-	if (!err) {
-		printk(KERN_INFO " EDID read\n");
-		if (!dvi) {
-			enable_vga = 1;
-			fb0 = 1; /* fb0 will be VGA */
-			fb1 = 0; /* fb1 will be DVI or TV */
-		}
-
-		/* Handle TV modes */
-		/* This logic is fairly complex yet still doesn't handle all
-		   possibilities.  Once a customer knows the platform
-		   configuration, this should be simplified to what is desired.
-		 */
-		if (screeninfo.xres == 1920 && screeninfo.yres != 1200) {
-			/* MX51 can't handle clock speeds for anything larger.*/
-			if (!enable_tv)
-				enable_tv = 1;
-			if (enable_vga || enable_wvga || enable_tv == 2)
-				enable_tv = 2;
-			fb_data[0].mode = &(video_modes[0]);
-			if (!enable_wvga)
-				fb_data[1].mode_str = "800x600M-16@60";
-		} else if (screeninfo.xres > 1280 && screeninfo.yres > 1024) {
-			if (!enable_wvga) {
-				fb_data[fb0].mode_str = "1280x1024M-16@60";
-				fb_data[fb1].mode_str = NULL;
-			} else {
-				/* WVGA is preset so the DVI can't be > this. */
-				fb_data[0].mode_str = "1024x768M-16@60";
-			}
-		} else if (screeninfo.xres > 0 && screeninfo.yres > 0) {
-			if (!enable_wvga) {
-				fb_data[fb0].mode =
-					kzalloc(sizeof(struct fb_videomode),
-							GFP_KERNEL);
-				fb_var_to_videomode(fb_data[fb0].mode,
-						    &screeninfo);
-				fb_data[fb0].mode_str = NULL;
-				if (screeninfo.xres >= 1280 &&
-						screeninfo.yres > 720)
-					fb_data[fb1].mode_str = NULL;
-				else if (screeninfo.xres > 1024 &&
-						screeninfo.yres > 768)
-					fb_data[fb1].mode_str =
-						"800x600M-16@60";
-				else if (screeninfo.xres > 800 &&
-						screeninfo.yres > 600)
-					fb_data[fb1].mode_str =
-						"1024x768M-16@60";
-			} else {
-				/* A WVGA panel was specified and an EDID was
-				   read thus there is a DVI monitor attached. */
-				if (screeninfo.xres >= 1024)
-					fb_data[0].mode_str = "1024x768M-16@60";
-				else if (screeninfo.xres >= 800)
-					fb_data[0].mode_str = "800x600M-16@60";
-				else
-					fb_data[0].mode_str = "640x480M-16@60";
-			}
-		}
-	}
-#endif
-	return 0;
-}
-
 static void dvi_reset(void)
 {
 	gpio_direction_output(BABBAGE_DVI_RESET, 0);
@@ -790,13 +703,13 @@ static struct mxc_lightsensor_platform_data ls_data = {
 	.rext = 100,
 };
 
-static void ddc_dvi_init()
+static void ddc_dvi_init(void)
 {
 	/* enable DVI I2C */
 	gpio_set_value(BABBAGE_DVI_I2C_EN, 1);
 }
 
-static int ddc_dvi_update()
+static int ddc_dvi_update(void)
 {
 	/* DVI cable state */
 	if (gpio_get_value(BABBAGE_DVI_DET) == 1)
diff --git a/arch/arm/mach-mx5/mx53_evk.c b/arch/arm/mach-mx5/mx53_evk.c
index 6601ef2..7bfd096 100644
--- a/arch/arm/mach-mx5/mx53_evk.c
+++ b/arch/arm/mach-mx5/mx53_evk.c
@@ -867,13 +867,13 @@ static struct mxc_lcd_platform_data sii902x_hdmi_data = {
 	.reset = sii902x_hdmi_reset,
 };
 
-static void ddc_dvi_init()
+static void ddc_dvi_init(void)
 {
 	/* enable DVI I2C */
 	gpio_set_value(MX53_DVI_I2C, 1);
 }
 
-static int ddc_dvi_update()
+static int ddc_dvi_update(void)
 {
 	/* DVI cable state */
 	if (gpio_get_value(MX53_DVI_DETECT) == 1)
diff --git a/arch/arm/mach-mx5/pm.c b/arch/arm/mach-mx5/pm.c
index e1d4bfa..a2e35d1 100644
--- a/arch/arm/mach-mx5/pm.c
+++ b/arch/arm/mach-mx5/pm.c
@@ -269,7 +269,7 @@ static int __init pm_init(void)
 
 	if (cpu_is_mx51() || cpu_is_mx53()) {
 		suspend_param1 =
-			cpu_is_mx51() ? SUSPEND_ID_MX51 : SUSPEND_ID_MX53;
+			cpu_is_mx51() ? (void *)SUSPEND_ID_MX51:(void *)SUSPEND_ID_MX53;
 		memcpy(suspend_iram_base, cpu_do_suspend_workaround,
 				SZ_4K);
 	} else if (cpu_is_mx50()) {
diff --git a/arch/arm/mach-mx5/system.c b/arch/arm/mach-mx5/system.c
index 9bc667b..ab86360 100644
--- a/arch/arm/mach-mx5/system.c
+++ b/arch/arm/mach-mx5/system.c
@@ -50,13 +50,11 @@ extern void *wait_in_iram_base;
 extern void __iomem *apll_base;
 
 static struct clk *gpc_dvfs_clk;
-static struct regulator *vpll;
 static struct clk *pll1_sw_clk;
 static struct clk *osc;
 static struct clk *pll1_main_clk;
 static struct clk *ddr_clk ;
 static struct clk *sys_clk ;
-static int dvfs_core_paused;
 
 /* set cpu low power mode before WFI instruction */
 void mxc_cpu_lp_set(enum mxc_cpu_pwr_mode mode)
diff --git a/arch/arm/plat-mxc/clock.c b/arch/arm/plat-mxc/clock.c
index 34c4be1..fae8dbb 100644
--- a/arch/arm/plat-mxc/clock.c
+++ b/arch/arm/plat-mxc/clock.c
@@ -437,7 +437,7 @@ static void *mxc_proc_clocks_seq_start(struct seq_file *file, loff_t *index)
 static void *mxc_proc_clocks_seq_next(struct seq_file *file, void *data,
 								loff_t *index)
 {
-	struct mxc_clk  *current_clock = (struct clk *) data;
+	struct mxc_clk  *current_clock = (struct mxc_clk *) data;
 
 	/* Check for nonsense. */
 
@@ -470,7 +470,6 @@ static int mxc_proc_clocks_seq_show(struct seq_file *file, void *data)
 {
 	int            result;
 	struct mxc_clk     *clock = (struct mxc_clk *) data;
-	struct clk     *parent = clock->reg_clk->parent;
 	unsigned int   longest_length = (unsigned int) file->private;
 	unsigned long  range_divisor;
 	const char     *range_units;
@@ -504,7 +503,7 @@ static int mxc_proc_clocks_seq_show(struct seq_file *file, void *data)
 		return result;
 
 	result = seq_printf(file, "  %10lu (%lu%s)\n",
-		rate,
+		(long unsigned int)rate,
 		rate / range_divisor, range_units);
 
 	return result;
diff --git a/arch/arm/plat-mxc/pwm.c b/arch/arm/plat-mxc/pwm.c
index 17f36c1..2f8a35e 100644
--- a/arch/arm/plat-mxc/pwm.c
+++ b/arch/arm/plat-mxc/pwm.c
@@ -6,7 +6,7 @@
  * published by the Free Software Foundation.
  *
  * Derived from pxa PWM driver by eric miao <eric.miao@marvell.com>
- * Copyright 2009-2010 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2009-2011 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 #include <linux/module.h>
@@ -117,10 +117,11 @@ int pwm_config(struct pwm_device *pwm, int duty_ns, int period_ns)
 		 * both the prescaler (/1 .. /128) and then by CLKSEL
 		 * (/2 .. /16).
 		 */
+		u32 p;
 		u32 max = readl(pwm->mmio_base + MX1_PWMP);
 		if (pwm->pwmo_invert)
 			duty_ns = period_ns - duty_ns;
-		u32 p = max * duty_ns / period_ns;
+		p = max * duty_ns / period_ns;
 		writel(max - p, pwm->mmio_base + MX1_PWMS);
 	} else {
 		BUG();
diff --git a/arch/arm/plat-mxc/zq_calib.c b/arch/arm/plat-mxc/zq_calib.c
index 35b10f6..9e7b2ab 100644
--- a/arch/arm/plat-mxc/zq_calib.c
+++ b/arch/arm/plat-mxc/zq_calib.c
@@ -237,50 +237,6 @@ static void mxc_zq_hw_load(u32 pu, u32 pd, u32 pu_pd_sel)
 	__raw_writel(0x1, databahn_base + DATABAHN_REG_ZQ_HW_CFG);
 }
 
-/*!
- * MXC ZQ interface - Load the PU/PD value to the ZQ buffers by software
- *
- * @param pu	u32
- * @param pd	u32
- */
-
-static void mxc_zq_sw_load(u32 pu, u32 pd)
-{
-	u32 data;
-	u32 pu_m1, pd_m1;
-
-	/*
-	 * The PU/PD values stored in register
-	 * DATABAHN_REG_ZQ_SW_CFG1/2 would be loaded.
-	 * */
-	pu_m1 = (pu <= 0) ? 0 : pu - 1;
-	pd_m1 = (pd <= 0) ? 0 : pd - 1;
-
-	data = ((pd_m1) << 24) | ((pu_m1) << 16);
-	__raw_writel(data, databahn_base + DATABAHN_REG_ZQ_SW_CFG1);
-	data = (pd << 8) | pu;
-	__raw_writel(data, databahn_base + DATABAHN_REG_ZQ_SW_CFG2);
-
-	/* Loading PU value, set pu_pd_sel=0 */
-	__raw_writel((0x3 << 20) | (1 << 16),
-			databahn_base + DATABAHN_REG_ZQ_HW_CFG);
-	__raw_writel(0x1 << 21,
-			databahn_base + DATABAHN_REG_ZQ_HW_CFG);
-
-	/* Loading PD value, set pu_pd_sel=1 */
-	data |= (1 << 4);
-	__raw_writel(data, databahn_base + DATABAHN_REG_ZQ_SW_CFG1);
-
-	/*
-	 * bit[21]: select software load
-	 * bit[20]: enable software load
-	 */
-	__raw_writel((0x3 << 20) | (1 << 16),
-			databahn_base + DATABAHN_REG_ZQ_HW_CFG);
-	/* clear for next load */
-	__raw_writel(0x1 << 21, databahn_base + DATABAHN_REG_ZQ_HW_CFG);
-}
-
 /*
  * This function is for ZQ pu calibration
  */
-- 
1.7.4.1

