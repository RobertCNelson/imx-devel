From 4ebcdffbe79a0426608563062eb10b1aa7f040f0 Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Fri, 22 Apr 2011 17:00:16 +0800
Subject: [PATCH 900/998] ENGR00142487 GPMI : use the platform's partition layout firstly

If the user has his own partition layout such as Android user.
We can use it in the first priority.

Signed-off-by: Huang Shijie <b32955@freescale.com>
---
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c |   13 +++++++++++++
 1 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
index efb0f93..29da3c7 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
@@ -1152,6 +1152,8 @@ static int mil_boot_areas_init(struct gpmi_nfc_data *this)
 	int                            mtd_support_is_adequate;
 	unsigned int                   i;
 	struct mtd_partition           partitions[4];
+	struct mtd_partition           *partitions_ptr;
+	struct gpmi_nfc_platform_data *pdata = this->pdata;
 	struct mtd_info                *search_mtd;
 	struct mtd_info                *chip_0_remainder_mtd = 0;
 	struct mtd_info                *medium_remainder_mtd = 0;
@@ -1172,6 +1174,13 @@ static int mil_boot_areas_init(struct gpmi_nfc_data *this)
 	static char  *medium_remainder_name = "gpmi-nfc-remainder";
 	static char  *general_use_name      = "gpmi-nfc-general-use";
 
+	/* If the platform defines the partions use it first */
+	if (pdata->partitions && pdata->partition_count) {
+		partitions_ptr = pdata->partitions;
+		return add_mtd_partitions(mtd, partitions_ptr,
+					pdata->partition_count);
+	}
+
 	/* Check if we're protecting the boot areas.*/
 	if (!rom->boot_area_count) {
 		/*
@@ -1247,6 +1256,7 @@ static int mil_boot_areas_init(struct gpmi_nfc_data *this)
 
 	if (rom->boot_area_count == 1) {
 #if defined(CONFIG_MTD_PARTITIONS)
+
 		/*
 		 * We partition the medium like so:
 		 *
@@ -1562,6 +1572,9 @@ static int mil_partitions_init(struct gpmi_nfc_data *this)
 	if (error)
 		return error;
 
+	if (pdata->partition_count)
+		return 0;
+
 	/*
 	 * If we've been told to, register the MTD that represents the entire
 	 * medium. Normally, we don't register the main MTD because we only want
-- 
1.7.4.1

