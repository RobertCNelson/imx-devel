From 86c2335df83397e065db3bbda601158cdac5a4a8 Mon Sep 17 00:00:00 2001
From: Zou Weihua -wayne zou <b36644@freescale.com>
Date: Thu, 12 May 2011 19:18:13 +0800
Subject: [PATCH 982/998] ENGR00143296-2 Add Ripley mc34708 i2c driver support

Add mc34708 i2c driver support for mx53 Ripley Quick Start board,
and fix some compile warning.

Signed-off-by: Zou Weihua -wayne zou <b36644@freescale.com>
---
 drivers/mxc/pmic/core/pmic_core_i2c.c       |   19 +++++++++++++------
 drivers/mxc/pmic/mc34708/mc34708_adc.c      |   16 +++++++---------
 drivers/mxc/pmic/mc34708/mc34708_battery.c  |   11 -----------
 drivers/regulator/reg-mc34708.c             |   17 +----------------
 include/linux/mfd/mc34708/mc34708_battery.h |    2 +-
 5 files changed, 22 insertions(+), 43 deletions(-)

diff --git a/drivers/mxc/pmic/core/pmic_core_i2c.c b/drivers/mxc/pmic/core/pmic_core_i2c.c
index e8b90ec..de5ca76 100644
--- a/drivers/mxc/pmic/core/pmic_core_i2c.c
+++ b/drivers/mxc/pmic/core/pmic_core_i2c.c
@@ -37,6 +37,7 @@
 #include <linux/irq.h>
 #include <linux/i2c.h>
 #include <linux/mfd/mc13892/core.h>
+#include <linux/mfd/mc34708/core.h>
 #include <linux/pmic_external.h>
 #include <linux/pmic_status.h>
 #include <linux/uaccess.h>
@@ -45,14 +46,17 @@
 #include "pmic.h"
 
 #define MC13892_GENERATION_ID_LSH	6
-#define MC13892_IC_ID_LSH		13
+#define MC13892_IC_ID_LSH		    13
 
 #define MC13892_GENERATION_ID_WID	3
-#define MC13892_IC_ID_WID		6
+#define MC13892_IC_ID_WID		    6
 
-#define MC13892_GEN_ID_VALUE	0x7
-#define MC13892_IC_ID_VALUE		1
+#define MC13892_GEN_ID_VALUE	    0x7
+#define MC13892_IC_ID_VALUE		    1
 
+#define MC34708_GEN_ID_VALUE	    0x91
+#define MC34708_GENERATION_ID_LSH	0
+#define MC34708_GENERATION_ID_WID	9
 /*
  * Global variables
  */
@@ -96,11 +100,13 @@ static struct platform_device bleds_ldm = {
 
 enum pmic_id {
 	PMIC_ID_MC13892,
+	PMIC_ID_MC34708,
 	PMIC_ID_INVALID,
 };
 
 static struct pmic_internal pmic_internal[] = {
 	[PMIC_ID_MC13892] = _PMIC_INTERNAL_INITIALIZER(mc13892),
+	[PMIC_ID_MC34708] = _PMIC_INTERNAL_INITIALIZER(mc34708),
 };
 
 static int get_index_pmic_internal(const char *name)
@@ -194,8 +200,8 @@ static int __devinit is_chip_onboard(struct i2c_client *client)
 	/*bind the right device to the driver */
 	if (pmic_i2c_24bit_read(client, REG_IDENTIFICATION, &ret) == -1)
 		return -1;
-
-	if (MC13892_GEN_ID_VALUE != BITFEXT(ret, MC13892_GENERATION_ID)) {
+	if ((MC13892_GEN_ID_VALUE != BITFEXT(ret, MC13892_GENERATION_ID)) &&
+	   (MC34708_GEN_ID_VALUE != BITFEXT(ret, MC34708_GENERATION_ID))) {
 		/*compare the address value */
 		dev_err(&client->dev,
 			"read generation ID 0x%x is not equal to 0x%x!\n",
@@ -386,6 +392,7 @@ static int pmic_resume(struct i2c_client *client)
 
 static const struct i2c_device_id pmic_id[] = {
 	{"mc13892", 0},
+	{"mc34708", 0},
 	{},
 };
 
diff --git a/drivers/mxc/pmic/mc34708/mc34708_adc.c b/drivers/mxc/pmic/mc34708/mc34708_adc.c
index a72fc26..85e8664 100644
--- a/drivers/mxc/pmic/mc34708/mc34708_adc.c
+++ b/drivers/mxc/pmic/mc34708/mc34708_adc.c
@@ -85,7 +85,6 @@
 /* internal function */
 static void callback_tspendet(void *);
 static void callback_tsdone(void *);
-static void callback_adcbisdone(void *);
 
 static int suspend_flag;
 
@@ -101,7 +100,7 @@ u32 value[8];
 
 static bool pmic_adc_ready;
 
-int is_mc34708_adc_ready()
+int is_mc34708_adc_ready(void)
 {
 	return pmic_adc_ready;
 }
@@ -146,7 +145,6 @@ static void callback_adcdone(void *unused)
 
 int mc34708_pmic_adc_init(void)
 {
-	unsigned int reg_value = 0, i = 0;
 
 	if (suspend_flag == 1)
 		return -EBUSY;
@@ -189,7 +187,7 @@ PMIC_STATUS mc34708_pmic_adc_deinit(void)
 PMIC_STATUS mc34708_pmic_adc_convert(t_channel channel, unsigned short *result)
 {
 	PMIC_STATUS ret;
-	unsigned int register_val = 0, register_mask = 0;
+	unsigned int register_val = 0;
 	unsigned int register1;
 
 	register1 = MC34708_REG_ADC2;
@@ -310,6 +308,11 @@ static int pmic_adc_filter(t_touch_screen *ts_curr)
 
 PMIC_STATUS mc34708_adc_read_ts(t_touch_screen *ts_value, int wait_tsi)
 {
+	int i;
+	int adc3 = X_POS << 8 | X_POS << 10 | DUMMY << 12 |
+	    Y_POS << 14 | Y_POS << 16 | DUMMY << 18 |
+	    CONTACT_RES << 20 | CONTACT_RES << 22;
+
 	pr_debug("mc34708_adc : mc34708_adc_read_ts\n");
 
 	if (wait_tsi) {
@@ -326,10 +329,6 @@ PMIC_STATUS mc34708_adc_read_ts(t_touch_screen *ts_value, int wait_tsi)
 
 	INIT_COMPLETION(tsdone_int);
 
-	int adc3 = X_POS << 8 | X_POS << 10 | DUMMY << 12 |
-	    Y_POS << 14 | Y_POS << 16 | DUMMY << 18 |
-	    CONTACT_RES << 20 | CONTACT_RES << 22;
-
 	pmic_write_reg(MC34708_REG_ADC1, 0xFFF000, PMIC_ALL_BITS);
 	pmic_write_reg(MC34708_REG_ADC2, 0x000000, PMIC_ALL_BITS);
 	pmic_write_reg(MC34708_REG_ADC3, adc3, PMIC_ALL_BITS);
@@ -338,7 +337,6 @@ PMIC_STATUS mc34708_adc_read_ts(t_touch_screen *ts_value, int wait_tsi)
 
 	wait_for_completion_interruptible(&tsdone_int);
 
-	int i;
 	for (i = 0; i < 4; i++) {
 		int reg = MC34708_REG_ADC4 + i;
 		int result, ret;
diff --git a/drivers/mxc/pmic/mc34708/mc34708_battery.c b/drivers/mxc/pmic/mc34708/mc34708_battery.c
index e36a224..151c8b8 100644
--- a/drivers/mxc/pmic/mc34708/mc34708_battery.c
+++ b/drivers/mxc/pmic/mc34708/mc34708_battery.c
@@ -165,8 +165,6 @@ static struct mc34708_charger_config ripley_charge_config = {
 	.pointsNumber = 1,
 };
 
-static int dump_ripley_register(int reg);
-
 static int enable_charger(int enable)
 {
 	charging_flag = enable ? 1 : 0;
@@ -331,14 +329,6 @@ static enum power_supply_property ripley_usb_charger_props[] = {
 #define LOWBATT_UV_TO_BITS(uv)	((uv - 3100000) / 100000)
 #define CHRITEM_UV_TO_BITS(uv)	(((uv / 1000) - 50) / 50)
 
-static int dump_ripley_register(int reg)
-{
-	unsigned int value;
-	pmic_read_reg(reg, &value, PMIC_ALL_BITS);
-	pr_info("ripley reg %d = 0x%x\n", reg, value);
-	return 0;
-}
-
 static int init_charger(struct mc34708_charger_config *config)
 {
 	/* set charger current termination threshold */
@@ -714,7 +704,6 @@ static void battery_over_temp_event_callback(void *para)
 
 static void battery_charge_complete_event_callback(void *para)
 {
-	struct ripley_dev_info *di = (struct ripley_dev_info *)para;
 	pr_info("\n\n battery charge complete event, disable charging\n");
 }
 
diff --git a/drivers/regulator/reg-mc34708.c b/drivers/regulator/reg-mc34708.c
index b0fa381..3837f3c 100644
--- a/drivers/regulator/reg-mc34708.c
+++ b/drivers/regulator/reg-mc34708.c
@@ -849,16 +849,6 @@ static int mc34708_sw_get_normal_voltage(struct regulator_dev *reg)
 		return mV * 1000;
 }
 
-static int mc34708_sw_normal_enable(struct regulator_dev *reg)
-{
-	return 0;
-}
-
-static int mc34708_sw_normal_disable(struct regulator_dev *reg)
-{
-	return 0;
-}
-
 static int mc34708_sw_stby_enable(struct regulator_dev *reg)
 {
 	return 0;
@@ -871,7 +861,7 @@ static int mc34708_sw_stby_disable(struct regulator_dev *reg)
 
 static int mc34708_sw_set_stby_voltage(struct regulator_dev *reg, int uV)
 {
-	unsigned int register_val = 0, register_mask = 0, register_valtest = 0;
+	unsigned int register_val = 0, register_mask = 0;
 	unsigned int register1 = 0;
 
 	int voltage, mV = uV / 1000;
@@ -928,7 +918,6 @@ static int mc34708_sw_set_normal_mode(struct regulator_dev *reg,
 	unsigned int reg_val = 0, reg_mask = 0;
 	unsigned int register1 = 0;
 	unsigned int l_mode;
-	int sw = rdev_get_id(reg);
 
 	switch (mode) {
 	case REGULATOR_MODE_FAST:
@@ -957,8 +946,6 @@ static unsigned int mc34708_sw_get_normal_mode(struct regulator_dev *reg)
 {
 	unsigned int reg_val = 0, reg_mask = 0;
 	unsigned int register1 = 0;
-	unsigned int l_mode = 0;
-	int sw = rdev_get_id(reg);
 	int ret = 0;
 
 	ret = pmic_read_reg(register1, &reg_val, reg_mask);
@@ -971,8 +958,6 @@ static int mc34708_sw_set_stby_mode(struct regulator_dev *reg,
 {
 	unsigned int reg_val = 0, reg_mask = 0;
 	unsigned int register1 = 0;
-	unsigned int l_mode;
-	int sw = rdev_get_id(reg);
 
 	return pmic_write_reg(register1, reg_val, reg_mask);
 }
diff --git a/include/linux/mfd/mc34708/mc34708_battery.h b/include/linux/mfd/mc34708/mc34708_battery.h
index c38c448..71fd9e7 100644
--- a/include/linux/mfd/mc34708/mc34708_battery.h
+++ b/include/linux/mfd/mc34708/mc34708_battery.h
@@ -67,7 +67,7 @@ struct mc34708_charger_setting_point {
 };
 
 /* brief Defines the battery charger configuration. */
-typedef struct mc34708_charger_config {
+struct mc34708_charger_config {
 
 	u32 batteryTempLow;
 	u32 batteryTempHigh;
-- 
1.7.4.1

