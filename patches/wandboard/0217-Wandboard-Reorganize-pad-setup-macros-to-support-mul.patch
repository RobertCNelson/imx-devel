From 399fdcfdad9dde309a62f9977b294ca3d279599d Mon Sep 17 00:00:00 2001
From: Tapani <tapani@vmail.me>
Date: Tue, 21 May 2013 11:21:50 +0800
Subject: [PATCH 217/225] Wandboard : Reorganize pad setup macros to support
 multiple cpu types.

---
 arch/arm/mach-mx6/board-wand.c |  458 ++++++++++++++--------------------------
 1 file changed, 160 insertions(+), 298 deletions(-)

diff --git a/arch/arm/mach-mx6/board-wand.c b/arch/arm/mach-mx6/board-wand.c
index 7411445..4ca4a33 100644
--- a/arch/arm/mach-mx6/board-wand.c
+++ b/arch/arm/mach-mx6/board-wand.c
@@ -33,6 +33,7 @@
 #include <mach/devices-common.h>
 #include <mach/gpio.h>
 #include <mach/iomux-mx6dl.h>
+#include <mach/iomux-mx6q.h>
 #include <mach/iomux-v3.h>
 #include <mach/mx6.h>
 
@@ -64,8 +65,11 @@
 #define WAND_WL_WAKE		IMX_GPIO_NR(1, 30)
 
 /* Syntactic sugar for pad configuration */
-#define WAND_SETUP_PADS(p) \
-        mxc_iomux_v3_setup_multiple_pads((p), ARRAY_SIZE(p))
+#define IMX6_SETUP_PAD(p) \
+	if (cpu_is_mx6q()) \
+		mxc_iomux_v3_setup_pad(MX6Q_PAD_##p);\
+	else \
+		mxc_iomux_v3_setup_pad(MX6DL_PAD_##p)
 
 /* See arch/arm/plat-mxc/include/mach/iomux-mx6dl.h for definitions */
 
@@ -90,100 +94,6 @@ static __init void wand_init_dma(void) {
  *                                                                          
  ****************************************************************************/
 
-#define WAND_SD3_PADS 6
-
-static const iomux_v3_cfg_t wand_sd_pads[3][3][WAND_SD3_PADS] = {
-	{	{
-		MX6DL_PAD_SD1_CLK__USDHC1_CLK_50MHZ_40OHM,
-		MX6DL_PAD_SD1_CMD__USDHC1_CMD_50MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT0__USDHC1_DAT0_50MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT1__USDHC1_DAT1_50MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT2__USDHC1_DAT2_50MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT3__USDHC1_DAT3_50MHZ_40OHM,
-		}, {
-		MX6DL_PAD_SD1_CLK__USDHC1_CLK_100MHZ_40OHM,
-		MX6DL_PAD_SD1_CMD__USDHC1_CMD_100MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT0__USDHC1_DAT0_100MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT1__USDHC1_DAT1_100MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT2__USDHC1_DAT2_100MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT3__USDHC1_DAT3_100MHZ_40OHM,
-		}, {
-		MX6DL_PAD_SD1_CLK__USDHC1_CLK_200MHZ_40OHM,
-		MX6DL_PAD_SD1_CMD__USDHC1_CMD_200MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT0__USDHC1_DAT0_200MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT1__USDHC1_DAT1_200MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT2__USDHC1_DAT2_200MHZ_40OHM,
-		MX6DL_PAD_SD1_DAT3__USDHC1_DAT3_200MHZ_40OHM,
-                }
-        }, {	{
-		MX6DL_PAD_SD2_CLK__USDHC2_CLK_50MHZ,
-		MX6DL_PAD_SD2_CMD__USDHC2_CMD_50MHZ,
-		MX6DL_PAD_SD2_DAT0__USDHC2_DAT0_50MHZ,
-		MX6DL_PAD_SD2_DAT1__USDHC2_DAT1_50MHZ,
-		MX6DL_PAD_SD2_DAT2__USDHC2_DAT2_50MHZ,
-		MX6DL_PAD_SD2_DAT3__USDHC2_DAT3_50MHZ,
-		}, {
-		MX6DL_PAD_SD2_CLK__USDHC2_CLK_100MHZ,
-		MX6DL_PAD_SD2_CMD__USDHC2_CMD_100MHZ,
-		MX6DL_PAD_SD2_DAT0__USDHC2_DAT0_100MHZ,
-		MX6DL_PAD_SD2_DAT1__USDHC2_DAT1_100MHZ,
-		MX6DL_PAD_SD2_DAT2__USDHC2_DAT2_100MHZ,
-		MX6DL_PAD_SD2_DAT3__USDHC2_DAT3_100MHZ,
-		}, {
-		MX6DL_PAD_SD2_CLK__USDHC2_CLK_200MHZ,
-		MX6DL_PAD_SD2_CMD__USDHC2_CMD_200MHZ,
-		MX6DL_PAD_SD2_DAT0__USDHC2_DAT0_200MHZ,
-		MX6DL_PAD_SD2_DAT1__USDHC2_DAT1_200MHZ,
-		MX6DL_PAD_SD2_DAT2__USDHC2_DAT2_200MHZ,
-		MX6DL_PAD_SD2_DAT3__USDHC2_DAT3_200MHZ,
-		}
-        }, {	{
-		MX6DL_PAD_SD3_CLK__USDHC3_CLK_50MHZ,
-		MX6DL_PAD_SD3_CMD__USDHC3_CMD_50MHZ,
-		MX6DL_PAD_SD3_DAT0__USDHC3_DAT0_50MHZ,
-		MX6DL_PAD_SD3_DAT1__USDHC3_DAT1_50MHZ,
-		MX6DL_PAD_SD3_DAT2__USDHC3_DAT2_50MHZ,
-		MX6DL_PAD_SD3_DAT3__USDHC3_DAT3_50MHZ,
-	        }, {
-		MX6DL_PAD_SD3_CLK__USDHC3_CLK_100MHZ,
-		MX6DL_PAD_SD3_CMD__USDHC3_CMD_100MHZ,
-		MX6DL_PAD_SD3_DAT0__USDHC3_DAT0_100MHZ,
-		MX6DL_PAD_SD3_DAT1__USDHC3_DAT1_100MHZ,
-		MX6DL_PAD_SD3_DAT2__USDHC3_DAT2_100MHZ,
-		MX6DL_PAD_SD3_DAT3__USDHC3_DAT3_100MHZ,
-	        }, {
-		MX6DL_PAD_SD3_CLK__USDHC3_CLK_200MHZ,
-		MX6DL_PAD_SD3_CMD__USDHC3_CMD_200MHZ,
-		MX6DL_PAD_SD3_DAT0__USDHC3_DAT0_200MHZ,
-		MX6DL_PAD_SD3_DAT1__USDHC3_DAT1_200MHZ,
-		MX6DL_PAD_SD3_DAT2__USDHC3_DAT2_200MHZ,
-		MX6DL_PAD_SD3_DAT3__USDHC3_DAT3_200MHZ,
-		}                
-        }
-};
-
-/* ------------------------------------------------------------------------ */
-
-static int wand_sd_speed_change(unsigned int sd, int clock) {
-	static int pad_speed[3] = { 200, 200, 200 };
-
-	if (clock > 100000000) {                
-		if (pad_speed[sd] == 200) return 0;
-		pad_speed[sd] = 200;
-		return WAND_SETUP_PADS(wand_sd_pads[sd][2]);
-	} else if (clock > 52000000) {
-		if (pad_speed[sd] == 100) return 0;
-		pad_speed[sd] = 100;
-		return WAND_SETUP_PADS(wand_sd_pads[sd][1]); 
-	} else {
-		if (pad_speed[sd] == 50) return 0;
-		pad_speed[sd] = 50;
-		return WAND_SETUP_PADS(wand_sd_pads[sd][0]);
-	}
-}
-
-/* ------------------------------------------------------------------------ */
-
 static const struct esdhc_platform_data wand_sd_data[3] = {
 	{
 		.cd_gpio		= WAND_SD1_CD,
@@ -191,7 +101,6 @@ static const struct esdhc_platform_data wand_sd_data[3] = {
 		.keep_power_at_suspend	= 1,
 	        .support_8bit		= 0,
 		.delay_line		= 0,
-		.platform_pad_change	= wand_sd_speed_change,
                 .cd_type                = ESDHC_CD_CONTROLLER,
 	}, {
 		.cd_gpio		=-EINVAL,
@@ -199,7 +108,6 @@ static const struct esdhc_platform_data wand_sd_data[3] = {
 		.keep_power_at_suspend	= 1,
 		.support_8bit		= 0,
 		.delay_line		= 0,
-		.platform_pad_change	= wand_sd_speed_change,
                 .always_present		= 1,
                 .cd_type                = ESDHC_CD_PERMANENT,
 	}, {
@@ -208,7 +116,6 @@ static const struct esdhc_platform_data wand_sd_data[3] = {
 		.keep_power_at_suspend	= 1,
 		.support_8bit		= 0,
 		.delay_line		= 0,
-		.platform_pad_change	= wand_sd_speed_change,
                 .cd_type                = ESDHC_CD_CONTROLLER,
 	}
 };
@@ -217,13 +124,34 @@ static const struct esdhc_platform_data wand_sd_data[3] = {
 
 static void wand_init_sd(void) {
 	int i;
+
+	IMX6_SETUP_PAD( SD1_CLK__USDHC1_CLK_50MHZ_40OHM );
+	IMX6_SETUP_PAD( SD1_CMD__USDHC1_CMD_50MHZ_40OHM );
+	IMX6_SETUP_PAD( SD1_DAT0__USDHC1_DAT0_50MHZ_40OHM );
+	IMX6_SETUP_PAD( SD1_DAT1__USDHC1_DAT1_50MHZ_40OHM );
+	IMX6_SETUP_PAD( SD1_DAT2__USDHC1_DAT2_50MHZ_40OHM );
+	IMX6_SETUP_PAD( SD1_DAT3__USDHC1_DAT3_50MHZ_40OHM );
+
+	IMX6_SETUP_PAD( SD2_CLK__USDHC2_CLK );
+	IMX6_SETUP_PAD( SD2_CMD__USDHC2_CMD );
+	IMX6_SETUP_PAD( SD2_DAT0__USDHC2_DAT0 );
+	IMX6_SETUP_PAD( SD2_DAT1__USDHC2_DAT1 );
+	IMX6_SETUP_PAD( SD2_DAT2__USDHC2_DAT2 );
+	IMX6_SETUP_PAD( SD2_DAT3__USDHC2_DAT3 );
+
+	IMX6_SETUP_PAD( SD3_CLK__USDHC3_CLK_50MHZ );
+	IMX6_SETUP_PAD( SD3_CMD__USDHC3_CMD_50MHZ );
+	IMX6_SETUP_PAD( SD3_DAT0__USDHC3_DAT0_50MHZ );
+	IMX6_SETUP_PAD( SD3_DAT1__USDHC3_DAT1_50MHZ );
+	IMX6_SETUP_PAD( SD3_DAT2__USDHC3_DAT2_50MHZ );
+	IMX6_SETUP_PAD( SD3_DAT3__USDHC3_DAT3_50MHZ );
+
 	/* Card Detect for SD1 & SD3, respectively */
-	mxc_iomux_v3_setup_pad(MX6DL_PAD_GPIO_2__GPIO_1_2); 
-	mxc_iomux_v3_setup_pad(MX6DL_PAD_EIM_DA9__GPIO_3_9);
+	IMX6_SETUP_PAD( GPIO_2__GPIO_1_2 ); 
+	IMX6_SETUP_PAD( EIM_DA9__GPIO_3_9 );
 
 	/* Add mmc devices in reverse order, so mmc0 always is boot sd (SD3) */
 	for (i=2; i>=0; i--) {
-		WAND_SETUP_PADS(wand_sd_pads[i][2]);
                 imx6q_add_sdhci_usdhc_imx(i, &wand_sd_data[i]);
 	}
 }
@@ -235,23 +163,8 @@ static void wand_init_sd(void) {
  *                                                                          
  ****************************************************************************/
 
-static const iomux_v3_cfg_t wand_i2c_pads[3][2] __initdata = {
-	{        
-	MX6DL_PAD_EIM_D21__I2C1_SCL,
-	MX6DL_PAD_EIM_D28__I2C1_SDA,
-	}, {
-	MX6DL_PAD_KEY_COL3__I2C2_SCL,
-	MX6DL_PAD_KEY_ROW3__I2C2_SDA,
-	}, {
-	MX6DL_PAD_GPIO_5__I2C3_SCL,
-	MX6DL_PAD_GPIO_16__I2C3_SDA
-	}
-};
-
-/* ------------------------------------------------------------------------ */
-
 static struct imxi2c_platform_data wand_i2c_data[] = {
-	{ .bitrate	= 100000, },
+	{ .bitrate	= 400000, },
 	{ .bitrate	= 400000, },
 	{ .bitrate	= 400000, },
 };
@@ -260,8 +173,17 @@ static struct imxi2c_platform_data wand_i2c_data[] = {
 
 static void __init wand_init_i2c(void) {
         int i;
+        
+        IMX6_SETUP_PAD( EIM_D21__I2C1_SCL );
+	IMX6_SETUP_PAD( EIM_D28__I2C1_SDA );
+
+	IMX6_SETUP_PAD( KEY_COL3__I2C2_SCL );
+	IMX6_SETUP_PAD( KEY_ROW3__I2C2_SDA );
+
+	IMX6_SETUP_PAD( GPIO_5__I2C3_SCL );
+	IMX6_SETUP_PAD( GPIO_16__I2C3_SDA );
+        
 	for (i=0; i<3; i++) {
-		WAND_SETUP_PADS(wand_i2c_pads[i]);
 		imx6q_add_imx_i2c(i, &wand_i2c_data[i]);
         }
 }
@@ -272,19 +194,12 @@ static void __init wand_init_i2c(void) {
  * Initialize debug console (UART1)
  *                                                                          
  ****************************************************************************/
-
-static const __initdata iomux_v3_cfg_t wand_uart_pads[] = {
-	/* UART1 (debug console) */
-        MX6DL_PAD_CSI0_DAT10__UART1_TXD,
-        MX6DL_PAD_CSI0_DAT11__UART1_RXD,
-        MX6DL_PAD_EIM_D19__UART1_CTS,
-        MX6DL_PAD_EIM_D20__UART1_RTS,
-};
-
-/* ------------------------------------------------------------------------ */
  
 static __init void wand_init_uart(void) {
-        WAND_SETUP_PADS(wand_uart_pads);
+        IMX6_SETUP_PAD( CSI0_DAT10__UART1_TXD );
+        IMX6_SETUP_PAD( CSI0_DAT11__UART1_RXD );
+        IMX6_SETUP_PAD( EIM_D19__UART1_CTS );
+        IMX6_SETUP_PAD( EIM_D20__UART1_RTS );
 
 	imx6q_add_imx_uart(0, NULL);
 }
@@ -296,16 +211,6 @@ static __init void wand_init_uart(void) {
  *                                                                          
  ****************************************************************************/
 
-static const iomux_v3_cfg_t wand_audio_pads[] = {
-        MX6DL_PAD_CSI0_DAT4__AUDMUX_AUD3_TXC,
-        MX6DL_PAD_CSI0_DAT5__AUDMUX_AUD3_TXD,
-        MX6DL_PAD_CSI0_DAT6__AUDMUX_AUD3_TXFS,
-        MX6DL_PAD_CSI0_DAT7__AUDMUX_AUD3_RXD,
-        MX6DL_PAD_GPIO_0__CCM_CLKO,
-};
-
-/* ------------------------------------------------------------------------ */
-
 extern struct mxc_audio_platform_data wand_audio_channel_data;
 
 /* This function is called as a callback from the audio channel data struct */
@@ -389,7 +294,11 @@ static struct imx_asrc_platform_data wand_asrc_data = {
 /* ------------------------------------------------------------------------ */
 
 void __init wand_init_audio(void) {
-        WAND_SETUP_PADS(wand_audio_pads);
+        IMX6_SETUP_PAD( CSI0_DAT4__AUDMUX_AUD3_TXC );
+        IMX6_SETUP_PAD( CSI0_DAT5__AUDMUX_AUD3_TXD );
+        IMX6_SETUP_PAD( CSI0_DAT6__AUDMUX_AUD3_TXFS );
+        IMX6_SETUP_PAD( CSI0_DAT7__AUDMUX_AUD3_RXD );
+        IMX6_SETUP_PAD( GPIO_0__CCM_CLKO );
         
         /* Sample rate converter is added together with audio */
         wand_asrc_data.asrc_core_clk = clk_get(NULL, "asrc_clk");
@@ -399,7 +308,7 @@ void __init wand_init_audio(void) {
 	imx6q_add_imx_ssi(1, &wand_ssi_pdata);
 	/* Enable SPDIF */
 
-	mxc_iomux_v3_setup_pad(MX6DL_PAD_ENET_RXD0__SPDIF_OUT1);
+        IMX6_SETUP_PAD( ENET_RXD0__SPDIF_OUT1);
 
 	wand_spdif.spdif_core_clk = clk_get_sys("mxc_spdif.0", NULL);
 	clk_put(wand_spdif.spdif_core_clk);
@@ -415,31 +324,6 @@ void __init wand_init_audio(void) {
  *                                                                            
  *****************************************************************************/
 
-static const __initconst iomux_v3_cfg_t wand_fec_pads[] = {
-        MX6DL_PAD_ENET_MDIO__ENET_MDIO,
-        MX6DL_PAD_ENET_MDC__ENET_MDC,
-        
-        MX6DL_PAD_ENET_REF_CLK__ENET_TX_CLK,
-        
-	MX6DL_PAD_RGMII_TXC__ENET_RGMII_TXC,
-	MX6DL_PAD_RGMII_TD0__ENET_RGMII_TD0,
-	MX6DL_PAD_RGMII_TD1__ENET_RGMII_TD1,
-	MX6DL_PAD_RGMII_TD2__ENET_RGMII_TD2,
-	MX6DL_PAD_RGMII_TD3__ENET_RGMII_TD3,
-	MX6DL_PAD_RGMII_TX_CTL__ENET_RGMII_TX_CTL,
-	MX6DL_PAD_RGMII_RXC__ENET_RGMII_RXC,
-	MX6DL_PAD_RGMII_RD0__ENET_RGMII_RD0,
-	MX6DL_PAD_RGMII_RD1__ENET_RGMII_RD1,
-	MX6DL_PAD_RGMII_RD2__ENET_RGMII_RD2,
-	MX6DL_PAD_RGMII_RD3__ENET_RGMII_RD3,
-	MX6DL_PAD_RGMII_RX_CTL__ENET_RGMII_RX_CTL,
-                
-        MX6DL_PAD_ENET_TX_EN__GPIO_1_28,
-        MX6DL_PAD_EIM_D29__GPIO_3_29,
-};
-
-/* ------------------------------------------------------------------------ */
-
 static int wand_fec_phy_init(struct phy_device *phydev) {
 	unsigned short val;
 
@@ -482,7 +366,23 @@ static struct fec_platform_data wand_fec_data = {
 /* ------------------------------------------------------------------------ */
 
 static __init void wand_init_ethernet(void) {
-	WAND_SETUP_PADS(wand_fec_pads);
+	IMX6_SETUP_PAD( ENET_MDIO__ENET_MDIO );
+	IMX6_SETUP_PAD( ENET_MDC__ENET_MDC );
+	IMX6_SETUP_PAD( ENET_REF_CLK__ENET_TX_CLK );
+	IMX6_SETUP_PAD( RGMII_TXC__ENET_RGMII_TXC );
+	IMX6_SETUP_PAD( RGMII_TD0__ENET_RGMII_TD0 );
+	IMX6_SETUP_PAD( RGMII_TD1__ENET_RGMII_TD1 );
+	IMX6_SETUP_PAD( RGMII_TD2__ENET_RGMII_TD2 );
+	IMX6_SETUP_PAD( RGMII_TD3__ENET_RGMII_TD3 );
+	IMX6_SETUP_PAD( RGMII_TX_CTL__ENET_RGMII_TX_CTL );
+	IMX6_SETUP_PAD( RGMII_RXC__ENET_RGMII_RXC );
+	IMX6_SETUP_PAD( RGMII_RD0__ENET_RGMII_RD0 );
+	IMX6_SETUP_PAD( RGMII_RD1__ENET_RGMII_RD1 );
+	IMX6_SETUP_PAD( RGMII_RD2__ENET_RGMII_RD2 );
+	IMX6_SETUP_PAD( RGMII_RD3__ENET_RGMII_RD3 );
+	IMX6_SETUP_PAD( RGMII_RX_CTL__ENET_RGMII_RX_CTL );                
+	IMX6_SETUP_PAD( ENET_TX_EN__GPIO_1_28 );
+	IMX6_SETUP_PAD( EIM_D29__GPIO_3_29 );
         
 	gpio_request(WAND_RGMII_RST, "rgmii reset");
 	gpio_direction_output(WAND_RGMII_RST, 0);
@@ -501,15 +401,6 @@ static __init void wand_init_ethernet(void) {
  *                                                                          
  ****************************************************************************/
 
-static const __initdata iomux_v3_cfg_t wand_usb_pads[] = {
-        MX6DL_PAD_GPIO_9__GPIO_1_9,
-        MX6DL_PAD_GPIO_1__USBOTG_ID,
-        MX6DL_PAD_EIM_D22__GPIO_3_22,
-        MX6DL_PAD_EIM_D30__GPIO_3_30
-};
-
-/* ------------------------------------------------------------------------ */
-
 static void wand_usbotg_vbus(bool on) {
         gpio_set_value_cansleep(WAND_USB_OTG_PWR, !on);
 }
@@ -517,7 +408,10 @@ static void wand_usbotg_vbus(bool on) {
 /* ------------------------------------------------------------------------ */
 
 static __init void wand_init_usb(void) {
-        WAND_SETUP_PADS(wand_usb_pads);
+        IMX6_SETUP_PAD( GPIO_9__GPIO_1_9 );
+        IMX6_SETUP_PAD( GPIO_1__USBOTG_ID );
+        IMX6_SETUP_PAD( EIM_D22__GPIO_3_22 );
+        IMX6_SETUP_PAD( EIM_D30__GPIO_3_30 );
         
         gpio_request(WAND_USB_OTG_OC, "otg oc");
 	gpio_direction_input(WAND_USB_OTG_OC);
@@ -623,53 +517,6 @@ static void wand_init_hdmi(void) {
  *                                                                          
  ****************************************************************************/
 
-static const __initdata iomux_v3_cfg_t wand_ttl_pads[] = {
-	MX6DL_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK,
-	MX6DL_PAD_DI0_PIN2__IPU1_DI0_PIN2,		/* HSync */
-	MX6DL_PAD_DI0_PIN3__IPU1_DI0_PIN3,		/* VSync */
-	MX6DL_PAD_DI0_PIN4__IPU1_DI0_PIN4,		/* Contrast */
-	MX6DL_PAD_DI0_PIN15__IPU1_DI0_PIN15,		/* DISP0_DRDY */
-	MX6DL_PAD_DISP0_DAT0__IPU1_DISP0_DAT_0,
-	MX6DL_PAD_DISP0_DAT1__IPU1_DISP0_DAT_1,
-	MX6DL_PAD_DISP0_DAT2__IPU1_DISP0_DAT_2,
-	MX6DL_PAD_DISP0_DAT3__IPU1_DISP0_DAT_3,
-	MX6DL_PAD_DISP0_DAT4__IPU1_DISP0_DAT_4,
-	MX6DL_PAD_DISP0_DAT5__IPU1_DISP0_DAT_5,
-	MX6DL_PAD_DISP0_DAT6__IPU1_DISP0_DAT_6,
-	MX6DL_PAD_DISP0_DAT7__IPU1_DISP0_DAT_7,
-	MX6DL_PAD_DISP0_DAT8__IPU1_DISP0_DAT_8,
-	MX6DL_PAD_DISP0_DAT9__IPU1_DISP0_DAT_9,
-	MX6DL_PAD_DISP0_DAT10__IPU1_DISP0_DAT_10,
-	MX6DL_PAD_DISP0_DAT11__IPU1_DISP0_DAT_11,
-	MX6DL_PAD_DISP0_DAT12__IPU1_DISP0_DAT_12,
-	MX6DL_PAD_DISP0_DAT13__IPU1_DISP0_DAT_13,
-	MX6DL_PAD_DISP0_DAT14__IPU1_DISP0_DAT_14,
-	MX6DL_PAD_DISP0_DAT15__IPU1_DISP0_DAT_15,
-	MX6DL_PAD_DISP0_DAT16__IPU1_DISP0_DAT_16,
-	MX6DL_PAD_DISP0_DAT17__IPU1_DISP0_DAT_17,
-	MX6DL_PAD_DISP0_DAT18__IPU1_DISP0_DAT_18,
-	MX6DL_PAD_DISP0_DAT19__IPU1_DISP0_DAT_19,
-	MX6DL_PAD_DISP0_DAT20__IPU1_DISP0_DAT_20,
-	MX6DL_PAD_DISP0_DAT21__IPU1_DISP0_DAT_21,
-	MX6DL_PAD_DISP0_DAT22__IPU1_DISP0_DAT_22,
-	MX6DL_PAD_DISP0_DAT23__IPU1_DISP0_DAT_23,
-};
-
-static const __initdata iomux_v3_cfg_t wand_lvds_pads[] = {
-	MX6DL_PAD_SD4_DAT0__GPIO_2_8,
-	MX6DL_PAD_SD4_DAT1__GPIO_2_9,
-	MX6DL_PAD_SD4_DAT2__GPIO_2_10,
-	MX6DL_PAD_SD4_DAT3__GPIO_2_11,
-        
-	MX6DL_PAD_LVDS0_CLK_P__LDB_LVDS0_CLK,
-	MX6DL_PAD_LVDS0_TX0_P__LDB_LVDS0_TX0,
-	MX6DL_PAD_LVDS0_TX1_P__LDB_LVDS0_TX1,
-	MX6DL_PAD_LVDS0_TX2_P__LDB_LVDS0_TX2,
-	MX6DL_PAD_LVDS0_TX3_P__LDB_LVDS0_TX3,
-};
-
-/* ------------------------------------------------------------------------ */
-
 static struct fsl_mxc_lcd_platform_data wand_lcdif_data = {
 	.ipu_id = 0,
 	.disp_id = 0,
@@ -703,8 +550,48 @@ static struct ipuv3_fb_platform_data wand_lvds_fb[] = {
 
 
 static void __init wand_init_lcd(void) {
-	WAND_SETUP_PADS(wand_ttl_pads);
-	WAND_SETUP_PADS(wand_lvds_pads);
+	/* TTL */
+	IMX6_SETUP_PAD( DI0_DISP_CLK__IPU1_DI0_DISP_CLK );
+	IMX6_SETUP_PAD( DI0_PIN2__IPU1_DI0_PIN2 );		/* HSync */
+	IMX6_SETUP_PAD( DI0_PIN3__IPU1_DI0_PIN3 );		/* VSync */
+	IMX6_SETUP_PAD( DI0_PIN4__IPU1_DI0_PIN4 );		/* Contrast */
+	IMX6_SETUP_PAD( DI0_PIN15__IPU1_DI0_PIN15 );		/* DISP0_DRDY */
+	IMX6_SETUP_PAD( DISP0_DAT0__IPU1_DISP0_DAT_0 );
+	IMX6_SETUP_PAD( DISP0_DAT1__IPU1_DISP0_DAT_1 );
+	IMX6_SETUP_PAD( DISP0_DAT2__IPU1_DISP0_DAT_2 );
+	IMX6_SETUP_PAD( DISP0_DAT3__IPU1_DISP0_DAT_3 );
+	IMX6_SETUP_PAD( DISP0_DAT4__IPU1_DISP0_DAT_4 );
+	IMX6_SETUP_PAD( DISP0_DAT5__IPU1_DISP0_DAT_5 );
+	IMX6_SETUP_PAD( DISP0_DAT6__IPU1_DISP0_DAT_6 );
+	IMX6_SETUP_PAD( DISP0_DAT7__IPU1_DISP0_DAT_7 );
+	IMX6_SETUP_PAD( DISP0_DAT8__IPU1_DISP0_DAT_8 );
+	IMX6_SETUP_PAD( DISP0_DAT9__IPU1_DISP0_DAT_9 );
+	IMX6_SETUP_PAD( DISP0_DAT10__IPU1_DISP0_DAT_10 );
+	IMX6_SETUP_PAD( DISP0_DAT11__IPU1_DISP0_DAT_11 );
+	IMX6_SETUP_PAD( DISP0_DAT12__IPU1_DISP0_DAT_12 );
+	IMX6_SETUP_PAD( DISP0_DAT13__IPU1_DISP0_DAT_13 );
+	IMX6_SETUP_PAD( DISP0_DAT14__IPU1_DISP0_DAT_14 );
+	IMX6_SETUP_PAD( DISP0_DAT15__IPU1_DISP0_DAT_15 );
+	IMX6_SETUP_PAD( DISP0_DAT16__IPU1_DISP0_DAT_16 );
+	IMX6_SETUP_PAD( DISP0_DAT17__IPU1_DISP0_DAT_17 );
+	IMX6_SETUP_PAD( DISP0_DAT18__IPU1_DISP0_DAT_18 );
+	IMX6_SETUP_PAD( DISP0_DAT19__IPU1_DISP0_DAT_19 );
+	IMX6_SETUP_PAD( DISP0_DAT20__IPU1_DISP0_DAT_20 );
+	IMX6_SETUP_PAD( DISP0_DAT21__IPU1_DISP0_DAT_21 );
+	IMX6_SETUP_PAD( DISP0_DAT22__IPU1_DISP0_DAT_22 );
+	IMX6_SETUP_PAD( DISP0_DAT23__IPU1_DISP0_DAT_23 );
+
+	/* LVDS */
+	IMX6_SETUP_PAD( SD4_DAT0__GPIO_2_8 );
+	IMX6_SETUP_PAD( SD4_DAT1__GPIO_2_9 );
+	IMX6_SETUP_PAD( SD4_DAT2__GPIO_2_10 );
+	IMX6_SETUP_PAD( SD4_DAT3__GPIO_2_11 );
+        
+	IMX6_SETUP_PAD( LVDS0_CLK_P__LDB_LVDS0_CLK );
+	IMX6_SETUP_PAD( LVDS0_TX0_P__LDB_LVDS0_TX0 );
+	IMX6_SETUP_PAD( LVDS0_TX1_P__LDB_LVDS0_TX1 );
+	IMX6_SETUP_PAD( LVDS0_TX2_P__LDB_LVDS0_TX2 );
+	IMX6_SETUP_PAD( LVDS0_TX3_P__LDB_LVDS0_TX3 );
 
 	gpio_request(IMX_GPIO_NR(2, 8), "lvds0_en");
 	gpio_direction_output(IMX_GPIO_NR(2, 8), 1);
@@ -733,24 +620,18 @@ static void __init wand_init_lcd(void) {
  *                                                                          
  ****************************************************************************/
 
-static const __initdata iomux_v3_cfg_t wand_wifi_pads[] = {
+/* assumes SD/MMC pins are set; call after wand_init_sd() */
+static __init void wand_init_wifi(void) {
         /* ref_on, enable 32k clock */
-        MX6DL_PAD_EIM_EB1__GPIO_2_29,
+        IMX6_SETUP_PAD( EIM_EB1__GPIO_2_29 );
         /* Wifi reset (resets when low!) */
-        MX6DL_PAD_EIM_A25__GPIO_5_2,
+        IMX6_SETUP_PAD( EIM_A25__GPIO_5_2 );
         /* reg on, signal to FDC6331L */
-        MX6DL_PAD_ENET_RXD1__GPIO_1_26,
+        IMX6_SETUP_PAD( ENET_RXD1__GPIO_1_26 );
         /* host wake */
-        MX6DL_PAD_ENET_TXD1__GPIO_1_29,
+        IMX6_SETUP_PAD( ENET_TXD1__GPIO_1_29 );
         /* wl wake - nc */
-        MX6DL_PAD_ENET_TXD0__GPIO_1_30,
-};
-
-/* ------------------------------------------------------------------------ */
-
-/* assumes SD/MMC pins are set; call after wand_init_sd() */
-static __init void wand_init_wifi(void) {
-	WAND_SETUP_PADS(wand_wifi_pads);
+        IMX6_SETUP_PAD( ENET_TXD0__GPIO_1_30 );
                 
 	gpio_request(WAND_WL_RST_N, "wl_rst_n");
 	gpio_direction_output(WAND_WL_RST_N, 0);
@@ -777,27 +658,6 @@ static __init void wand_init_wifi(void) {
  *                                                                          
  ****************************************************************************/
 
-static const __initdata iomux_v3_cfg_t wand_bt_pads[] = {
-        /* BT_ON, BT_WAKE and BT_HOST_WAKE */
-        MX6DL_PAD_EIM_DA13__GPIO_3_13,
-        MX6DL_PAD_EIM_DA14__GPIO_3_14,
-        MX6DL_PAD_EIM_DA15__GPIO_3_15,
-
-        /* AUD5 channel goes to BT */
-        MX6DL_PAD_KEY_COL0__AUDMUX_AUD5_TXC,
-        MX6DL_PAD_KEY_ROW0__AUDMUX_AUD5_TXD,
-        MX6DL_PAD_KEY_COL1__AUDMUX_AUD5_TXFS,
-        MX6DL_PAD_KEY_ROW1__AUDMUX_AUD5_RXD,        
-        
-        /* Bluetooth is on UART3*/
-        MX6DL_PAD_EIM_D23__UART3_CTS,
-        MX6DL_PAD_EIM_D24__UART3_TXD,
-        MX6DL_PAD_EIM_D25__UART3_RXD,
-        MX6DL_PAD_EIM_EB3__UART3_RTS,
-};
-
-/* ------------------------------------------------------------------------ */
-
 static const struct imxuart_platform_data wand_bt_uart_data = {
 	.flags = IMXUART_HAVE_RTSCTS | IMXUART_SDMA,
 	.dma_req_tx = MX6Q_DMA_REQ_UART3_TX,
@@ -808,7 +668,22 @@ static const struct imxuart_platform_data wand_bt_uart_data = {
 
 /* This assumes wifi is initialized (chip has power) */
 static __init void wand_init_bluetooth(void) {
-	WAND_SETUP_PADS(wand_bt_pads);
+        /* BT_ON, BT_WAKE and BT_HOST_WAKE */
+        IMX6_SETUP_PAD( EIM_DA13__GPIO_3_13 );
+        IMX6_SETUP_PAD( EIM_DA14__GPIO_3_14 );
+        IMX6_SETUP_PAD( EIM_DA15__GPIO_3_15 );
+
+        /* AUD5 channel goes to BT */
+        IMX6_SETUP_PAD( KEY_COL0__AUDMUX_AUD5_TXC );
+        IMX6_SETUP_PAD( KEY_ROW0__AUDMUX_AUD5_TXD );
+        IMX6_SETUP_PAD( KEY_COL1__AUDMUX_AUD5_TXFS );
+        IMX6_SETUP_PAD( KEY_ROW1__AUDMUX_AUD5_RXD );
+        
+        /* Bluetooth is on UART3*/
+        IMX6_SETUP_PAD( EIM_D23__UART3_CTS );
+        IMX6_SETUP_PAD( EIM_D24__UART3_TXD );
+        IMX6_SETUP_PAD( EIM_D25__UART3_RXD );
+        IMX6_SETUP_PAD( EIM_EB3__UART3_RTS );
         
 	imx6q_add_imx_uart(2, &wand_bt_uart_data);
 
@@ -901,21 +776,15 @@ static __init void wand_init_pm(void) {
  *                                                                          
  ****************************************************************************/
 
-static const __initdata iomux_v3_cfg_t wand_external_gpio_pads[] = {
-	MX6DL_PAD_EIM_DA11__GPIO_3_11,
-	MX6DL_PAD_EIM_D27__GPIO_3_27,
-	MX6DL_PAD_EIM_BCLK__GPIO_6_31,
-	MX6DL_PAD_ENET_RX_ER__GPIO_1_24,
-	MX6DL_PAD_SD3_RST__GPIO_7_8,
-	MX6DL_PAD_EIM_D26__GPIO_3_26,
-	MX6DL_PAD_EIM_DA8__GPIO_3_8,
-	MX6DL_PAD_GPIO_19__GPIO_4_5,
-};
-
-/* ------------------------------------------------------------------------ */
-
 static __init void wand_init_external_gpios(void) {
-	WAND_SETUP_PADS(wand_external_gpio_pads);
+	IMX6_SETUP_PAD( EIM_DA11__GPIO_3_11 );
+	IMX6_SETUP_PAD( EIM_D27__GPIO_3_27 );
+	IMX6_SETUP_PAD( EIM_BCLK__GPIO_6_31 );
+	IMX6_SETUP_PAD( ENET_RX_ER__GPIO_1_24 );
+	IMX6_SETUP_PAD( SD3_RST__GPIO_7_8 );
+	IMX6_SETUP_PAD( EIM_D26__GPIO_3_26 );
+	IMX6_SETUP_PAD( EIM_DA8__GPIO_3_8 );
+	IMX6_SETUP_PAD( GPIO_19__GPIO_4_5 );
 
 	gpio_request(IMX_GPIO_NR(3, 11), "external_gpio_0");
 	gpio_export(IMX_GPIO_NR(3, 11), true);
@@ -942,29 +811,11 @@ static __init void wand_init_external_gpios(void) {
  *                                                                          
  ****************************************************************************/
 
-static const __initdata iomux_v3_cfg_t wand_spi_pads[] = {
-	MX6DL_PAD_EIM_D16__ECSPI1_SCLK,
-	MX6DL_PAD_EIM_D17__ECSPI1_MISO,
-	MX6DL_PAD_EIM_D18__ECSPI1_MOSI,
-	MX6DL_PAD_EIM_EB2__GPIO_2_30,
-
-	MX6DL_PAD_EIM_CS0__ECSPI2_SCLK,
-	MX6DL_PAD_EIM_CS1__ECSPI2_MOSI,
-	MX6DL_PAD_EIM_OE__ECSPI2_MISO,
-	MX6DL_PAD_EIM_RW__GPIO_2_26,
-	MX6DL_PAD_EIM_LBA__GPIO_2_27,
-};
-/* The choice of using gpios for chipselect is deliberate,
-   there can be issues using the dedicated mux modes for cs.
-*/
-
-/* ------------------------------------------------------------------------ */
-
 static const int wand_spi1_chipselect[] = { IMX_GPIO_NR(2, 30) };
 
 /* platform device */
 static const struct spi_imx_master wand_spi1_data = {
-	.chipselect     = wand_spi1_chipselect,
+	.chipselect     = (int *)wand_spi1_chipselect,
 	.num_chipselect = ARRAY_SIZE(wand_spi1_chipselect),
 };
 
@@ -973,14 +824,25 @@ static const struct spi_imx_master wand_spi1_data = {
 static const int wand_spi2_chipselect[] = { IMX_GPIO_NR(2, 26), IMX_GPIO_NR(2, 27) };
 
 static const struct spi_imx_master wand_spi2_data = {
-	.chipselect     = wand_spi2_chipselect,
+	.chipselect     = (int *)wand_spi2_chipselect,
 	.num_chipselect = ARRAY_SIZE(wand_spi2_chipselect),
 };
 
 /* ------------------------------------------------------------------------ */
 
 static void __init wand_init_spi(void) {
-	WAND_SETUP_PADS(wand_spi_pads);
+	IMX6_SETUP_PAD( EIM_D16__ECSPI1_SCLK );
+	IMX6_SETUP_PAD( EIM_D17__ECSPI1_MISO );
+	IMX6_SETUP_PAD( EIM_D18__ECSPI1_MOSI );
+	IMX6_SETUP_PAD( EIM_EB2__GPIO_2_30 );
+
+	IMX6_SETUP_PAD( EIM_CS0__ECSPI2_SCLK );
+	IMX6_SETUP_PAD( EIM_CS1__ECSPI2_MOSI );
+	IMX6_SETUP_PAD( EIM_OE__ECSPI2_MISO );
+/* The choice of using gpios for chipselect is deliberate,
+   there can be issues using the dedicated mux modes for cs.*/
+	IMX6_SETUP_PAD( EIM_RW__GPIO_2_26 );
+	IMX6_SETUP_PAD( EIM_LBA__GPIO_2_27 );
         
 	imx6q_add_ecspi(0, &wand_spi1_data);
 	imx6q_add_ecspi(1, &wand_spi2_data);
@@ -1030,7 +892,7 @@ static const struct imx_pcie_platform_data wand_pcie_data = {
 /* ------------------------------------------------------------------------ */
 
 static void __init wand_init_pcie(void) {
-	mxc_iomux_v3_setup_pad(MX6DL_PAD_EIM_D31__GPIO_3_31);
+	IMX6_SETUP_PAD( EIM_D31__GPIO_3_31);
 	imx6q_add_pcie(&wand_pcie_data);
 }
 
-- 
1.7.10.4

